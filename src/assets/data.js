export const data = [
  {
    question: "What is JSX in React?",
    option1: "Java Syntax Extension",
    option2: "JavaScript XML",
    option3: "Java XML Syntax",
    option4: "JavaScript Extension",
    ans: 2,
  },
  {
    question: "Which hook is used to manage state in a functional component?",
    option1: "useEffect",
    option2: "useRef",
    option3: "useState",
    option4: "useContext",
    ans: 3,
  },
  {
    question: "Which Java feature allows multiple methods with the same name but different parameters?",
    option1: "Inheritance",
    option2: "Encapsulation",
    option3: "Polymorphism",
    option4: "Abstraction",
    ans: 3,
  },
  {
    question: "What does the 'super' keyword do in Java?",
    option1: "Refers to parent class object",
    option2: "Defines a superclass",
    option3: "Creates a superclass",
    option4: "Calls a child class constructor",
    ans: 1,
  },
  {
    question: "Which method is used to render components in React?",
    option1: "render()",
    option2: "display()",
    option3: "show()",
    option4: "return()",
    ans: 1,
  },
  {
    question: "What does 'this.setState' do in a React class component?",
    option1: "Initializes state",
    option2: "Directly changes state",
    option3: "Schedules an update to the componentâ€™s state",
    option4: "Deletes a state variable",
    ans: 3,
  },
  {
    question: "Which keyword is used to inherit a class in Java?",
    option1: "extends",
    option2: "inherits",
    option3: "implements",
    option4: "super",
    ans: 1,
  },
  {
    question: "Which of these is not a React hook?",
    option1: "useState",
    option2: "useEffect",
    option3: "useClass",
    option4: "useRef",
    ans: 3,
  },
  {
    question: "Which operator is used for conditional rendering in JSX?",
    option1: "||",
    option2: "??",
    option3: "&&",
    option4: "**",
    ans: 3,
  },
  {
    question: "What is the correct syntax for a Java main method?",
    option1: "void public static main(String args[])",
    option2: "public static void main(String[] args)",
    option3: "public void main(String[] args)",
    option4: "static void main(String args)",
    ans: 2,
  },
  {
    "question": "Which hook is used to perform side effects in a React component?",
    "option1": "useState",
    "option2": "useRef",
    "option3": "useEffect",
    "option4": "useMemo",
    "ans": 3,
  },
  {
    "question": "Which keyword is used to define an interface in Java?",
    "option1": "interface",
    "option2": "class",
    "option3": "implements",
    "option4": "extends",
    "ans": 1,
  },
  {
    "question": "What does 'key' prop help React with?",
    "option1": "Styling components",
    "option2": "Event handling",
    "option3": "Identifying list elements uniquely",
    "option4": "State management",
    "ans": 3,
  },
  {
    "question": "Which collection class allows duplicates in Java?",
    "option1": "Set",
    "option2": "Map",
    "option3": "List",
    "option4": "TreeSet",
    "ans": 3,
  },
  {
    "question": "What is the default return type of a React component?",
    "option1": "Number",
    "option2": "JSX",
    "option3": "HTML",
    "option4": "String",
    "ans": 2,
  },
  {
    "question": "Which method is used to start a thread in Java?",
    "option1": "start()",
    "option2": "run()",
    "option3": "begin()",
    "option4": "execute()",
    "ans": 1,
  },
  {
    "question": "What does useRef return in React?",
    "option1": "State updater function",
    "option2": "DOM node reference",
    "option3": "Reducer function",
    "option4": "Callback function",
    "ans": 2,
  },
  {
    "question": "Which loop is not present in Java?",
    "option1": "for",
    "option2": "foreach",
    "option3": "while",
    "option4": "repeat",
    "ans": 4,
  },
  {
    "question": "Which lifecycle method is called after a component is mounted in class components?",
    "option1": "componentDidUpdate",
    "option2": "componentDidMount",
    "option3": "componentWillMount",
    "option4": "shouldComponentUpdate",
    "ans": 2,
  },
  {
    "question": "Which Java package contains Scanner class?",
    "option1": "java.util",
    "option2": "java.io",
    "option3": "java.lang",
    "option4": "java.scanner",
    "ans": 1,
  },
  {
    "question": "What is the virtual DOM in React?",
    "option1": "Copy of real DOM in memory",
    "option2": "Actual DOM updated instantly",
    "option3": "A new HTML file",
    "option4": "The browser's cache",
    "ans": 1,
  },
  {
    "question": "Which concept allows reusing component logic in React?",
    "option1": "Custom Hooks",
    "option2": "Props",
    "option3": "State",
    "option4": "Context API",
    "ans": 1,
  },
  {
    "question": "Which keyword is used to prevent method overriding in Java?",
    "option1": "static",
    "option2": "super",
    "option3": "final",
    "option4": "private",
    "ans": 3,
  },
  {
    "question": "Which of these is a React event handler?",
    "option1": "onhover",
    "option2": "onClick",
    "option3": "onclick",
    "option4": "mouseClick",
    "ans": 2,
  },
  {
    "question": "Which interface must be implemented to create a thread in Java?",
    "option1": "Thread",
    "option2": "Runnable",
    "option3": "Startable",
    "option4": "Concurrent",
    "ans": 2,
  },
  {
    "question": "What does React use to optimize rendering?",
    "option1": "State tree",
    "option2": "Virtual DOM",
    "option3": "Shadow DOM",
    "option4": "DOM Parser",
    "ans": 2,
  },
  {
    "question": "Which of the following is not a primitive type in Java?",
    "option1": "int",
    "option2": "String",
    "option3": "char",
    "option4": "boolean",
    "ans": 2,
  },
  {
    "question": "How do you pass data from parent to child in React?",
    "option1": "State",
    "option2": "Hooks",
    "option3": "Props",
    "option4": "Context",
    "ans": 3,
  },
  {
    "question": "Which keyword is used for exception handling in Java?",
    "option1": "handle",
    "option2": "try",
    "option3": "raise",
    "option4": "except",
    "ans": 2,
  },
  {
    "question": "Which lifecycle method is used for cleanup in class components?",
    "option1": "componentDidMount",
    "option2": "componentWillUnmount",
    "option3": "componentDidUpdate",
    "option4": "shouldComponentUpdate",
    "ans": 2,
  },
  {
    "question": "Which hook should you use to fetch data on component mount?",
    "option1": "useState",
    "option2": "useRef",
    "option3": "useEffect",
    "option4": "useMemo",
    "ans": 3,
  },
  {
    "question": "Which access modifier allows visibility only within the same class in Java?",
    "option1": "public",
    "option2": "private",
    "option3": "protected",
    "option4": "default",
    "ans": 2,
  },
  {
    "question": "What is the default scope of Spring beans?",
    "option1": "singleton",
    "option2": "prototype",
    "option3": "request",
    "option4": "session",
    "ans": 1,
  },
  {
    "question": "Which React feature helps you manage global state?",
    "option1": "Hooks",
    "option2": "Context API",
    "option3": "Props",
    "option4": "Reducers",
    "ans": 2,
  },
  {
    "question": "Which of the following is a valid Java identifier?",
    "option1": "1number",
    "option2": "$value",
    "option3": "class",
    "option4": "new",
    "ans": 2,
  },
  {
    "question": "How do you prevent re-render in React for a component?",
    "option1": "useMemo",
    "option2": "memo()",
    "option3": "PureComponent",
    "option4": "All of the above",
    "ans": 4,
  },
  {
    "question": "Which statement is true about constructors in Java?",
    "option1": "They have return types",
    "option2": "They must be public",
    "option3": "They can be overloaded",
    "option4": "They can be static",
    "ans": 3,
  },
  {
    "question": "Which file is required to install a React app using Create React App?",
    "option1": "index.js",
    "option2": "package.json",
    "option3": "App.js",
    "option4": "main.js",
    "ans": 2,
  },
  {
    "question": "Which keyword is used to create a subclass in Java?",
    "option1": "inherit",
    "option2": "extends",
    "option3": "implements",
    "option4": "instanceof",
    "ans": 2,
  },
  {
    "question": "Which of the following lets you render content conditionally in JSX?",
    "option1": "if-else outside JSX",
    "option2": "ternary operator",
    "option3": "&& operator",
    "option4": "All of the above",
    "ans": 4,
  },
  {
    "question": "What does React.Fragment do?",
    "option1": "Creates a div wrapper",
    "option2": "Returns a single child",
    "option3": "Groups children without extra nodes",
    "option4": "Creates a component",
    "ans": 3,
  },
  {
    "question": "Which component type does not have lifecycle methods?",
    "option1": "Class Component",
    "option2": "Stateless Component",
    "option3": "PureComponent",
    "option4": "Functional Component (pre-hooks)",
    "ans": 4,
  },
  {
    "question": "Which of the following is a loop structure in Java?",
    "option1": "for",
    "option2": "loop",
    "option3": "repeat",
    "option4": "each",
    "ans": 1,
  },
  {
    "question": "Which operator is used to access object properties in Java?",
    "option1": "->",
    "option2": "::",
    "option3": ".",
    "option4": "&",
    "ans": 3,
  },
  {
    "question": "What is the correct way to export a component in React?",
    "option1": "module.exports = Component",
    "option2": "export Component",
    "option3": "export default Component",
    "option4": "include Component",
    "ans": 3,
  },
  {
    "question": "What is the purpose of 'final' keyword in Java?",
    "option1": "To create multiple instances",
    "option2": "To make a variable immutable",
    "option3": "To override methods",
    "option4": "To define inner classes",
    "ans": 2,
  },
  {
    "question": "Which lifecycle method is used to update the DOM after render?",
    "option1": "componentDidUpdate",
    "option2": "componentWillMount",
    "option3": "shouldComponentUpdate",
    "option4": "render",
    "ans": 1,
  },
  {
    "question": "Which tool is used to manage dependencies in a React app?",
    "option1": "Webpack",
    "option2": "Babel",
    "option3": "npm or yarn",
    "option4": "Node.js",
    "ans": 3,
  },
  {
    "question": "Which of the following is not a Java access modifier?",
    "option1": "public",
    "option2": "default",
    "option3": "static",
    "option4": "private",
    "ans": 3,
  },
  {
    "question": "What is the output of typeof null in JavaScript (used in React)?",
    "option1": "object",
    "option2": "null",
    "option3": "undefined",
    "option4": "number",
    "ans": 1,
  },
];